// <auto-generated />
using System;
using Infra.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(PlantechContext))]
    partial class PlantechContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Infra.Entities.Estoque.FornecedorEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("pk_fornecedor");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("cidade");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("endereco");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("razao_social");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("fornecedor");
                });

            modelBuilder.Entity("Infra.Entities.Estoque.MatrizFilialEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("pk_empresa");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("cidade");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_ini");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("endereco");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("estado");

                    b.Property<int?>("Numero")
                        .HasColumnType("INTEGER")
                        .HasColumnName("numero");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("razao_social");

                    b.HasKey("Id");

                    b.ToTable("matriz_filial");
                });

            modelBuilder.Entity("Infra.Entities.Estoque.ProdutoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_produtos");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<int>("InsumoConsumo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("insumo_consumo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<double>("PrecoCompra")
                        .HasColumnType("REAL")
                        .HasColumnName("preco_compra");

                    b.Property<float>("PrecoVenda")
                        .HasColumnType("REAL")
                        .HasColumnName("preco_venda");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade_estoque");

                    b.HasKey("Id");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("Infra.Entities.Financeiro.FormasPagamentosEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("pk_formaPamento");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ordem_compra_funcionarios_cargos_pk_cargos1");

                    b.Property<string>("FuncionarioId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("ordem_compra_funcionarios_pk_funcionario");

                    b.Property<int>("NotaFiscalVendaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("nota_fiscal_venda_pk_pedido");

                    b.Property<int>("OrdemCompraId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ordem_compra_pk_compra");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("NotaFiscalVendaId");

                    b.HasIndex("OrdemCompraId");

                    b.ToTable("formas_pagamentos");
                });

            modelBuilder.Entity("Infra.Entities.Financeiro.NotaFiscalCompraEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_compra");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("produtos_pk_produtos");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("REAL")
                        .HasColumnName("valor_tot");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("REAL")
                        .HasColumnName("valor_unitario");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("nota_fiscal_compra");
                });

            modelBuilder.Entity("Infra.Entities.Financeiro.NotaFiscalVendaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_pedido");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_pedido");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("REAL")
                        .HasColumnName("valor_total");

                    b.HasKey("Id");

                    b.ToTable("nota_fiscal_venda");
                });

            modelBuilder.Entity("Infra.Entities.Financeiro.PagamentosContasEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("pk_pagamento");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_cargos_pk_cargos");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_vencimento");

                    b.Property<string>("FuncionarioId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("funcionarios_pk_funcionario");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("pagametos_contas");
                });

            modelBuilder.Entity("Infra.Entities.Financeiro.RecebeContasEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_conta");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_cargos_pk_cargos");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cliente_pk_cliente");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_vencimento");

                    b.Property<string>("FuncionarioId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("funcionarios_pk_funcionario");

                    b.Property<int>("FuncionarioNotaFiscalVendaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_nota_fiscal_venda_pk_pedido");

                    b.Property<int>("NotaFiscalVendaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("nota_fiscal_venda_pk_pedido");

                    b.Property<int>("ProducaoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_producao_pk_producao");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("FuncionarioNotaFiscalVendaId");

                    b.HasIndex("NotaFiscalVendaId");

                    b.HasIndex("ProducaoId");

                    b.ToTable("recebe_contas");
                });

            modelBuilder.Entity("Infra.Entities.Producao.ApiEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_api");

                    b.Property<DateTime?>("DataInformacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_informacao");

                    b.Property<string>("Desenvolvimento")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("desenvolvimento");

                    b.Property<float?>("NivelAgua")
                        .HasColumnType("REAL")
                        .HasColumnName("nivel_agua");

                    b.Property<int>("ProducaoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("fk_producao");

                    b.Property<float?>("Temperatura")
                        .HasColumnType("REAL")
                        .HasColumnName("temperatura");

                    b.HasKey("Id");

                    b.ToTable("api");
                });

            modelBuilder.Entity("Infra.Entities.Producao.ItemConsumoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_item");

                    b.Property<int>("ItensReceitaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("itens_receita_pk_itens");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("produtos_pk_produtos");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("ItensReceitaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("item_consumo");
                });

            modelBuilder.Entity("Infra.Entities.Producao.ItemProduzidoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_item");

                    b.Property<int>("ApiId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("producao_api_pk_api");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_validade");

                    b.Property<int>("ItensReceitaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("producao_itens_receita_pk_itens");

                    b.Property<int>("ProducaoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("producao_pk_producao");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("produtos_pk_produtos");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("ApiId");

                    b.HasIndex("ItensReceitaId");

                    b.HasIndex("ProducaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("item_produzido");
                });

            modelBuilder.Entity("Infra.Entities.Producao.ItensReceitaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_itens");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.ToTable("itens_receita");
                });

            modelBuilder.Entity("Infra.Entities.Producao.ProducaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_producao");

                    b.Property<string>("AgricultorId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("fk_agricultor");

                    b.Property<int>("ApiId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("api_pk_api");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime?>("DataPrevisaoColheita")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_previsao_colheita");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_termino");

                    b.Property<int>("ItensReceitaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("itens_receita_pk_itens");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("lote");

                    b.HasKey("Id");

                    b.HasIndex("ApiId")
                        .IsUnique();

                    b.HasIndex("ItensReceitaId");

                    b.ToTable("producao");
                });

            modelBuilder.Entity("Infra.Entities.Producao.RelatorioProducaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_relatorio");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(245)
                        .HasColumnType("TEXT")
                        .HasColumnName("conteudo");

                    b.Property<DateTime>("DataRelatorio")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_relatorio");

                    b.Property<int>("ProducaoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("producao_pk_producao");

                    b.HasKey("Id");

                    b.HasIndex("ProducaoId");

                    b.ToTable("relatorio_producao");
                });

            modelBuilder.Entity("Infra.Entities.Producao.RelatorioVendaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_relatorio");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_cargos_pk_cargos");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT")
                        .HasColumnName("data");

                    b.Property<string>("FuncionarioId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("funcionarios_pk_funcionario");

                    b.Property<int>("FuncionarioNotaFiscalVendaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_nota_fiscal_venda_pk_pedido");

                    b.Property<int>("NotaFiscalVendaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("nota_fiscal_venda_pk_pedido");

                    b.Property<int>("ProducaoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_producao_pk_producao");

                    b.Property<string>("ProdutosLista")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("produtos_lista");

                    b.Property<string>("QuantidadeProdutos")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("quantidade_produtos");

                    b.Property<int>("TotalVendas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("total_vendas");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("FuncionarioNotaFiscalVendaId");

                    b.HasIndex("NotaFiscalVendaId");

                    b.HasIndex("ProducaoId");

                    b.ToTable("relatorio_venda");
                });

            modelBuilder.Entity("Infra.Entities.RecursosHumanos.CargoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_cargos");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("funcao");

                    b.Property<double>("Salario")
                        .HasColumnType("REAL")
                        .HasColumnName("salario");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("cargos");
                });

            modelBuilder.Entity("Infra.Entities.RecursosHumanos.FuncionarioEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("pk_funcionario");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("fk_cargo");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_adm");

                    b.Property<DateTime>("DataDemissao")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_dem");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<int>("NotaFiscalVendaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("nota_fiscal_venda_pk_pedido");

                    b.Property<int>("ProducaoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("producao_pk_producao");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("NotaFiscalVendaId");

                    b.HasIndex("ProducaoId");

                    b.ToTable("funcionarios");
                });

            modelBuilder.Entity("Infra.Entities.Vendas.ClienteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_cliente");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_cargos_pk_cargos");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT")
                        .HasColumnName("contato");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("endereco");

                    b.Property<string>("FuncionarioId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("funcionarios_pk_funcionario");

                    b.Property<int>("FuncionarioNotaFiscalVendaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_nota_fiscal_venda_pk_pedido");

                    b.Property<int>("NotaFiscalVendaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("nota_fiscal_venda_pk_pedido");

                    b.Property<int>("ProducaoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_producao_pk_producao");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("razao_social");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("FuncionarioNotaFiscalVendaId");

                    b.HasIndex("NotaFiscalVendaId");

                    b.HasIndex("ProducaoId");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Infra.Entities.Vendas.ItensVendaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_item");

                    b.Property<int>("NotaFiscalVendaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("nota_fiscal_venda_pk_pedido");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("produtos_pk_produtos");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("REAL")
                        .HasColumnName("valor_unitario");

                    b.HasKey("Id");

                    b.HasIndex("NotaFiscalVendaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("itens_venda");
                });

            modelBuilder.Entity("Infra.Entities.Vendas.OrdemCompraEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pk_compra");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionarios_cargos_pk_cargos");

                    b.Property<string>("FornecedorId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("fornecedor_pk_fornecedor");

                    b.Property<string>("FuncionarioId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("funcionarios_pk_funcionario");

                    b.Property<int>("NotaFiscalCompraId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("nota_fiscal_compra_pk_compra");

                    b.Property<string>("PagamentoId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("pagemetos_contas_pk_pagamento");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("nota_fiscal_compra_produtos_pk_produtos");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("NotaFiscalCompraId");

                    b.HasIndex("PagamentoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ordem_compra");
                });

            modelBuilder.Entity("Infra.Entities.Financeiro.FormasPagamentosEntity", b =>
                {
                    b.HasOne("Infra.Entities.RecursosHumanos.CargoEntity", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.RecursosHumanos.FuncionarioEntity", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalVendaEntity", "NotaFiscalVenda")
                        .WithMany()
                        .HasForeignKey("NotaFiscalVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Vendas.OrdemCompraEntity", "OrdemCompra")
                        .WithMany()
                        .HasForeignKey("OrdemCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Funcionario");

                    b.Navigation("NotaFiscalVenda");

                    b.Navigation("OrdemCompra");
                });

            modelBuilder.Entity("Infra.Entities.Financeiro.NotaFiscalCompraEntity", b =>
                {
                    b.HasOne("Infra.Entities.Estoque.ProdutoEntity", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Infra.Entities.Financeiro.PagamentosContasEntity", b =>
                {
                    b.HasOne("Infra.Entities.RecursosHumanos.CargoEntity", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.RecursosHumanos.FuncionarioEntity", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Infra.Entities.Financeiro.RecebeContasEntity", b =>
                {
                    b.HasOne("Infra.Entities.RecursosHumanos.CargoEntity", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Vendas.ClienteEntity", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.RecursosHumanos.FuncionarioEntity", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalVendaEntity", "FuncionarioNotaFiscalVenda")
                        .WithMany()
                        .HasForeignKey("FuncionarioNotaFiscalVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalVendaEntity", "NotaFiscalVenda")
                        .WithMany()
                        .HasForeignKey("NotaFiscalVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Producao.ProducaoEntity", "Producao")
                        .WithMany()
                        .HasForeignKey("ProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Cliente");

                    b.Navigation("Funcionario");

                    b.Navigation("FuncionarioNotaFiscalVenda");

                    b.Navigation("NotaFiscalVenda");

                    b.Navigation("Producao");
                });

            modelBuilder.Entity("Infra.Entities.Producao.ItemConsumoEntity", b =>
                {
                    b.HasOne("Infra.Entities.Producao.ItensReceitaEntity", "ItensReceita")
                        .WithMany()
                        .HasForeignKey("ItensReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Estoque.ProdutoEntity", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItensReceita");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Infra.Entities.Producao.ItemProduzidoEntity", b =>
                {
                    b.HasOne("Infra.Entities.Producao.ApiEntity", "Api")
                        .WithMany()
                        .HasForeignKey("ApiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Producao.ItensReceitaEntity", "ItensReceita")
                        .WithMany()
                        .HasForeignKey("ItensReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Producao.ProducaoEntity", "Producao")
                        .WithMany()
                        .HasForeignKey("ProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Estoque.ProdutoEntity", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Api");

                    b.Navigation("ItensReceita");

                    b.Navigation("Producao");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Infra.Entities.Producao.ProducaoEntity", b =>
                {
                    b.HasOne("Infra.Entities.Producao.ApiEntity", "Api")
                        .WithOne("Producao")
                        .HasForeignKey("Infra.Entities.Producao.ProducaoEntity", "ApiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Producao.ItensReceitaEntity", "ItensReceita")
                        .WithMany()
                        .HasForeignKey("ItensReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Api");

                    b.Navigation("ItensReceita");
                });

            modelBuilder.Entity("Infra.Entities.Producao.RelatorioProducaoEntity", b =>
                {
                    b.HasOne("Infra.Entities.Producao.ProducaoEntity", "Producao")
                        .WithMany()
                        .HasForeignKey("ProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producao");
                });

            modelBuilder.Entity("Infra.Entities.Producao.RelatorioVendaEntity", b =>
                {
                    b.HasOne("Infra.Entities.RecursosHumanos.CargoEntity", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.RecursosHumanos.FuncionarioEntity", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalVendaEntity", "FuncionarioNotaFiscalVenda")
                        .WithMany()
                        .HasForeignKey("FuncionarioNotaFiscalVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalVendaEntity", "NotaFiscalVenda")
                        .WithMany()
                        .HasForeignKey("NotaFiscalVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Producao.ProducaoEntity", "Producao")
                        .WithMany()
                        .HasForeignKey("ProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Funcionario");

                    b.Navigation("FuncionarioNotaFiscalVenda");

                    b.Navigation("NotaFiscalVenda");

                    b.Navigation("Producao");
                });

            modelBuilder.Entity("Infra.Entities.RecursosHumanos.FuncionarioEntity", b =>
                {
                    b.HasOne("Infra.Entities.RecursosHumanos.CargoEntity", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalVendaEntity", "NotaFiscalVenda")
                        .WithMany()
                        .HasForeignKey("NotaFiscalVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Producao.ProducaoEntity", "Producao")
                        .WithMany()
                        .HasForeignKey("ProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("NotaFiscalVenda");

                    b.Navigation("Producao");
                });

            modelBuilder.Entity("Infra.Entities.Vendas.ClienteEntity", b =>
                {
                    b.HasOne("Infra.Entities.RecursosHumanos.CargoEntity", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.RecursosHumanos.FuncionarioEntity", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalVendaEntity", "FuncionarioNotaFiscalVenda")
                        .WithMany()
                        .HasForeignKey("FuncionarioNotaFiscalVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalVendaEntity", "NotaFiscalVenda")
                        .WithMany()
                        .HasForeignKey("NotaFiscalVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Producao.ProducaoEntity", "Producao")
                        .WithMany()
                        .HasForeignKey("ProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Funcionario");

                    b.Navigation("FuncionarioNotaFiscalVenda");

                    b.Navigation("NotaFiscalVenda");

                    b.Navigation("Producao");
                });

            modelBuilder.Entity("Infra.Entities.Vendas.ItensVendaEntity", b =>
                {
                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalVendaEntity", "NotaFiscalVenda")
                        .WithMany()
                        .HasForeignKey("NotaFiscalVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Estoque.ProdutoEntity", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotaFiscalVenda");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Infra.Entities.Vendas.OrdemCompraEntity", b =>
                {
                    b.HasOne("Infra.Entities.RecursosHumanos.CargoEntity", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Estoque.FornecedorEntity", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.RecursosHumanos.FuncionarioEntity", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.NotaFiscalCompraEntity", "NotaFiscalCompra")
                        .WithMany()
                        .HasForeignKey("NotaFiscalCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Financeiro.PagamentosContasEntity", "Pagamento")
                        .WithMany()
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Estoque.ProdutoEntity", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Fornecedor");

                    b.Navigation("Funcionario");

                    b.Navigation("NotaFiscalCompra");

                    b.Navigation("Pagamento");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Infra.Entities.Producao.ApiEntity", b =>
                {
                    b.Navigation("Producao")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
